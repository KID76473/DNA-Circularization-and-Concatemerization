import mpmath as mp

len_of_nucleo = mp.fmul(3.4, mp.power(10, -10))

one_milli = mp.power(10, -3)

one_micro = mp.power(10, -6)

vol_of_standard_reactor = mp.fmul(100, one_micro)

# for reference:
# grams_list = [1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-07, 1e-06, 1e-06, 1e-06, 1e-06, 1e-06, 1e-06, 1e-06, 9.999999999999999e-06, 9.999999999999999e-06, 9.999999999999999e-06, 9.999999999999999e-06, 9.999999999999999e-06, 9.999999999999999e-06, 9.999999999999999e-06, 9.999999999999999e-05, 9.999999999999999e-05, 9.999999999999999e-05, 9.999999999999999e-05, 9.999999999999999e-05, 9.999999999999999e-05, 9.999999999999999e-05, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001] 
# length_list = [500, 1000, 2000, 5000, 10000, 20000, 50000, 500, 1000, 2000, 5000, 10000, 20000, 50000, 500, 1000, 2000, 5000, 10000, 20000, 50000, 500, 1000, 2000, 5000, 10000, 20000, 50000, 500, 1000, 2000, 5000, 10000, 20000, 50000] 

num_tails_grams_list = [19544436711.802406, 9772790097.806467, 4886537996.92398, 1954649507.9004269, 977330472.272514, 488666665.72937906, 195467009.39570683, 195444367118.02408, 97727900978.0647, 48865379969.2398, 19546495079.004265, 9773304722.72514, 4886666657.29379, 1954670093.9570687, 1954443671180.2407, 977279009780.647, 488653799692.39795, 195464950790.04263, 97733047227.2514, 48866666572.9379, 19546700939.570686, 19544436711802.406, 9772790097806.469, 4886537996923.9795, 1954649507900.4263, 977330472272.5142, 488666665729.37897, 195467009395.70682, 195444367118024.06, 97727900978064.7, 48865379969239.805, 19546495079004.266, 9773304722725.14, 4886666657293.79, 1954670093957.069] 

# finding the side length (in nucleotides) of the cube in simulated from the vol_of_standard_reactor

vol_standard_in_mtrs_cubed = mp.fmul(vol_of_standard_reactor, one_milli)
side_len_of_sim_cub = mp.cbrt(vol_standard_in_mtrs_cubed)
num_nucleo_side_len = mp.fdiv(side_len_of_sim_cub, len_of_nucleo)

total_vol = mp.power(num_nucleo_side_len, 3)

avg_dist_btw_2_nuc = []

for num in num_tails_grams_list:
    vol_per_nuc = mp.fdiv(total_vol, num)
    dist_btw_2_nuc = mp.cbrt(vol_per_nuc)
    avg_dist_btw_2_nuc.append(float(dist_btw_2_nuc))

with open("avg dist btw 2 tails for james model", "w") as file:
    file.write(f"avg_dist_btw_2_nuc {avg_dist_btw_2_nuc}")